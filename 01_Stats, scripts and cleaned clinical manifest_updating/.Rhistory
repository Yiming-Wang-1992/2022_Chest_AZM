knitr::opts_chunk$set(echo = TRUE)
# setwd("D:/My backup disk/Things currently working on/AZM+SERPAT/Submission_Chest_2021") #Windows
setwd("/Volumes/Yiming Wang/My backup disk/Things currently working on/AZM+SERPAT/Submission_Chest_2021") #Mac
data_all <- read_excel("transmission coding_GEE.xlsx")
pacman::p_load(
readxl,
dplyr,
data.table,
writexl,
gee
)
# setwd("D:/My backup disk/Things currently working on/AZM+SERPAT/Submission_Chest_2021") #Windows
setwd("/Volumes/Yiming Wang/My backup disk/Things currently working on/AZM+SERPAT/Submission_Chest_2021") #Mac
data_all <- read_excel("transmission coding_GEE.xlsx")
View(data_all)
head(data_all)
# Convert the data to factor
cols <- c("ID", "Sample_ID","Group_ID","ermA","ermB","ermC","ermF","mef","msrA","msrE","tetM","tetO","tetW","PermA","PermB","PermC","PermF","Pmef","PmsrA","PmsrE","PtetM","PtetO","PtetW")
data_shape <- lapply(data_all[cols], as.factor) %>% data.frame()
data_shape$ID <-as.numeric(data_shape$ID)
ermB_gee <- gee(ermB ~ PermB + Group_ID,
data = data_all,
id = ID,
family = binomial,
corstr = "independence")
# Summarize the model
summary(ermB_gee)
View(ermB_gee)
## Corstr choose independence here as the correlation structure within groups (id) is independent
ermB_gee <- gee(ermB ~ PermB + Group_ID + PermB*Group_ID,
data = data_all,
id = ID,
family = binomial,
corstr = "independence")
# Run GEE model
## ID here has to be a number and need to convert to numeric value as the id argument specifies the grouping factor. In this case it’s the “id” column in the data frame.
## Corstr choose independence here as the correlation structure within groups (id) is independent
ermA_gee <- gee(ermA ~ PermA + Group_ID,
data = data_all,
id = ID,
family = binomial,
corstr = "unstructured")
# Summarize the model
summary(ermA_gee)
ermB_gee <- gee(ermB ~ PermB + Group_ID + PermB*Group_ID,
data = data_all,
id = ID,
family = binomial,
corstr = "unstructured")
# Summarize the model
summary(ermB_gee)
ermB_gee <- gee(ermB ~ PermB + Group_ID + PermB*Group_ID,
data = data_all,
id = ID,
family = binomial,
corstr = "unstructured")
View(data_all)
ermA_gee <- gee(ermA ~ PermA + Group_ID,
data = data_all,
id = ID,
family = binomial,
corstr = "independence")
# Summarize the model
summary(ermA_gee)
## Corstr choose independence here as the correlation structure within groups (id) is independent
ermB_gee <- gee(ermB ~ PermB + Group_ID + PermB*Group_ID,
data = data_all,
id = ID,
family = binomial,
corstr = "independence")
# Summarize the model
ermB_gee <- gee(ermB ~ PermB + Group_ID,
data = data_all,
id = ID,
family = binomial,
corstr = "independence")
# Summarize the model
summary(ermB_gee)
ermB_gee <- gee(ermB ~ PermB + Group_ID + PermB*Group_ID,
data = data_all,
id = ID,
family = binomial,
corstr = "independence")
View(data_all)
View(data_all)
ermA_gee <- gee(ermA ~ PermA + Group_ID,
data = subset(data_all, PermA==1),
id = ID,
family = binomial,
corstr = "independence")
# Summarize the model
summary(ermA_gee)
ermB_gee <- gee(ermB ~ PermB + Group_ID,
data = subset(data_all, PermB==1),
id = ID,
family = binomial,
corstr = "independence")
# Summarize the model
summary(ermB_gee)
subset(data_all, PermB==1)
ermB_gee <- gee(ermB ~ PermB + Group_ID,
data = subset(data_all, PermB==1),
id = ID,
family = binomial,
corstr = "independence")
data.test<=subset(data_all,PermB==1)
data.test<-subset(data_all,PermB==1)
ermB_gee <- gee(ermB ~ Group_ID,
data = data.test,
id = ID,
family = binomial,
corstr = "independence")
summary(ermB_gee)
P_ermB <- 2 * pnorm(abs(coef(summary(ermB_gee))[,5]), lower.tail = FALSE)
P_ermB
data.test<-subset(data_all,PermB==0)
ermB_gee <- gee(ermB ~ Group_ID,
data = data.test,
id = ID,
family = binomial,
corstr = "independence")
# Summarize the model
summary(ermB_gee)
ermB_gee <- gee(ermB ~ Group_ID,
data = data.test,
id = ID,
family = binomial,
corstr = "independence")
View(data.test)
View(data_all)
mef_gee <- gee(mef ~ Pmef + Group_ID + Pmef * Group_ID,
data = data_all,
id = ID,
family = binomial,
corstr = "independence")
summary(mef_gee)
P_mef <- 2 * pnorm(abs(coef(summary(mef_gee))[,5]), lower.tail = FALSE)
P_mef
